#include <GL/glut.h>
#include <iostream>
#include <stdio.h>
#include <stdarg.h>
#include "CWoodFont.h"

using namespace wood::comm::font;

GLubyte space[] =  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

GLubyte dot[]   =  {0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; // .

GLubyte colon[] =  {0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00}; // :

GLubyte filled[] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

GLubyte letters[][13] = {
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0x66, 0x3c, 0x18}, 
	{0x00, 0x00, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe}, 
	{0x00, 0x00, 0x7e, 0xe7, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e}, 
	{0x00, 0x00, 0xfc, 0xce, 0xc7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc7, 0xce, 0xfc}, 
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xc0, 0xff}, 
	{0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xff}, 
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xcf, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e}, 
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3}, 
	{0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e}, 
	{0x00, 0x00, 0x7c, 0xee, 0xc6, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06}, 
	{0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xe0, 0xf0, 0xd8, 0xcc, 0xc6, 0xc3}, 
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0}, 
	{0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xdb, 0xff, 0xff, 0xe7, 0xc3}, 
	{0x00, 0x00, 0xc7, 0xc7, 0xcf, 0xcf, 0xdf, 0xdb, 0xfb, 0xf3, 0xf3, 0xe3, 0xe3}, 
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xe7, 0x7e}, 
	{0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe}, 
	{0x00, 0x00, 0x3f, 0x6e, 0xdf, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x66, 0x3c}, 
	{0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe}, 
	{0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x07, 0x7e, 0xe0, 0xc0, 0xc0, 0xe7, 0x7e}, 
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff}, 
	{0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3}, 
	{0x00, 0x00, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3}, 
	{0x00, 0x00, 0xc3, 0xe7, 0xff, 0xff, 0xdb, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3}, 
	{0x00, 0x00, 0xc3, 0x66, 0x66, 0x3c, 0x3c, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3}, 
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3}, 
	{0x00, 0x00, 0xff, 0xc0, 0xc0, 0x60, 0x30, 0x7e, 0x0c, 0x06, 0x03, 0x03, 0xff}
};

GLubyte number[10][13] ={
	{0x00, 0x00, 0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xff},   // 0
	{0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},   // 1
	{0x00, 0x00, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff},   // 2
	{0x00, 0x00, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff},   // 3
	{0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3},   // 4
	{0x00, 0x00, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff},   // 5
	{0x00, 0x00, 0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff},   // 6
	{0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xff, 0xff},   // 7
	{0x00, 0x00, 0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff},   // 8
	{0x00, 0x00, 0xff, 0xff, 0x03, 0x03, 0x03, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff}    // 9
};

GLuint fontOffset;

int CWoodFont::Init(void)
{
	if( m_bIsInited ){
		return 0;
	}

	GLuint i, j;
	glPixelStorei(GL_UNPACK_ALIGNMENT, 1);

	fontOffset = glGenLists (128);
	for (i = 0,j = 'A'; i < 26; i++,j++) {
		glNewList(fontOffset + j, GL_COMPILE);
		glBitmap(8, 13, 0.0, 2.0, 10.0, 0.0, letters[i]);
		glEndList();
	}

	for (i = 0,j = '0'; i < 10; i++,j++) {
		glNewList(fontOffset + j, GL_COMPILE);
		glBitmap(8, 13, 0.0, 2.0, 10.0, 0.0, number[i]);
		glEndList();
	}

	glNewList(fontOffset + ' ', GL_COMPILE);
	glBitmap(8, 13, 0.0, 2.0, 10.0, 0.0, space);
	glEndList();

	glNewList(fontOffset + '.', GL_COMPILE);
	glBitmap(8, 13, 0.0, 2.0, 10.0, 0.0, dot); // .
	glEndList();

	glNewList(fontOffset + ':', GL_COMPILE);
	glBitmap(8, 13, 0.0, 2.0, 10.0, 0.0, colon); //colon : 
	glEndList();

	//unrecognized char...

	m_bIsInited = true;
	return 0;
}

void CWoodFont::ShowString( GLfloat fX, GLfloat fY, char * sFormat,...){
	if(!m_bIsInited){
		return;
	}
	GLfloat color[3] = { 1.0, 1.0, 1.0 };
	glColor3fv(color);
	glRasterPos2f(fX, fY);

	char sBuffer[1024] = {0};
    va_list ap;    
    va_start(ap, sFormat);
	vsnprintf_s(sBuffer,sizeof(sBuffer),sizeof(sBuffer),sFormat,ap);
	va_end(ap);

	Print(sBuffer);
}

void CWoodFont::ShowString(GLfloat fX, GLfloat fY, GLfloat fColorR,GLfloat fColorG,GLfloat fColorB,char * sFormat,...){
	if(!m_bIsInited){
		return;
	}
	GLfloat color[3] = { fColorR, fColorG, fColorB };
	glColor3fv(color);
	glRasterPos2f(fX, fY);

	char sBuffer[1024] = {0};
    va_list ap;    
    va_start(ap, sFormat);
	vsnprintf_s(sBuffer,sizeof(sBuffer),sizeof(sBuffer),sFormat,ap);
	va_end(ap);

	Print(sBuffer);
}


void CWoodFont::Print(char * s){
	if(!m_bIsInited){
		return;
	}
	glPushAttrib (GL_LIST_BIT); //attention...
	glListBase( fontOffset );
	glCallLists( (GLsizei)strlen(s), GL_UNSIGNED_BYTE, (GLubyte *) s);
	glPopAttrib ();
}
